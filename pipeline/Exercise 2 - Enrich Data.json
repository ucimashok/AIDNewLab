{
	"name": "Exercise 2 - Enrich Data",
	"properties": {
		"description": "Pipeline for enriching data from DimCustomer with additional location information from an external data source.",
		"activities": [
			{
				"name": "Enrich Customer Data",
				"description": "Data flow that enriches the data from the DimCustomer table with location information from an external data source. The enriched data is then copied to a staging table in Azure Synapse Analytics.",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Import Customer dimension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "EnrichCustomerData",
						"type": "DataFlowReference",
						"parameters": {
							"UniqueId": {
								"value": "'@{substring(pipeline().RunId,0,8)}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"DimCustomer": {
								"UniqueId": {
									"value": "@substring(pipeline().RunId,0,8)",
									"type": "Expression"
								}
							},
							"EnrichedCustomerData": {
								"UniqueId": {
									"value": "@substring(pipeline().RunId,0,8)",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 48,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Import Customer dimension",
				"description": "Copies Customer data from files stored in a data lake, renames columns, and inserts the data into a staging version of the DimCustomer table in Azure Synapse Analytics.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dev/bronze/wwi-dimcustomer.csv"
					},
					{
						"name": "Destination",
						"value": "wwi_staging.@{concat('DimCustomer_',substring(pipeline().RunId,0,8))}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "asadatalake01",
							"type": "LinkedServiceReference"
						},
						"path": "staging",
						"enableCompression": true
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Customer Key",
									"type": "Int32"
								},
								"sink": {
									"name": "CustomerKey",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "WWI Customer ID",
									"type": "Int32"
								},
								"sink": {
									"name": "WWICustomerID",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "Customer",
									"type": "String"
								},
								"sink": {
									"name": "Customer",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Bill To Customer",
									"type": "String"
								},
								"sink": {
									"name": "BillToCustomer",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Category",
									"type": "String"
								},
								"sink": {
									"name": "Category",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Buying Group",
									"type": "String"
								},
								"sink": {
									"name": "BuyingGroup",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Primary Contact",
									"type": "String"
								},
								"sink": {
									"name": "PrimaryContact",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Postal Code",
									"type": "String"
								},
								"sink": {
									"name": "PostalCode",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Valid From",
									"type": "DateTime"
								},
								"sink": {
									"name": "ValidFrom",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Valid To",
									"type": "DateTime"
								},
								"sink": {
									"name": "ValidTo",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Lineage Key",
									"type": "Int32"
								},
								"sink": {
									"name": "LineageKey",
									"type": "Int32"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "wwi_dimcustomer_adls",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "wwi_staging_dimcustomer_asa",
						"type": "DatasetReference",
						"parameters": {
							"UniqueId": {
								"value": "@substring(pipeline().RunId,0,8)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ReadComments",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "wwi_comments_adls",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachComment",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ReadComments",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('ReadComments').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Sentiment Analysis",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "POST",
									"requestBody": {
										"value": "{\n\t\"documents\": [\n\t\t{\n\t\t\t\"id\": \"@{item().id}\",\n\t\t\t\"language\": \"en\",\n\t\t\t\"text\": \"@{item().comment}\"\n\t\t}\n\t]\n}\n",
										"type": "Expression"
									},
									"additionalHeaders": {
										"Content-Type": "application/json",
										"Ocp-Apim-Subscription-Key": "e06c61900db64b4ba4429394d6584e6a"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "cognitive_rest_dataset",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "wwi_sentiments_adls",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2021-09-17T12:13:35Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}